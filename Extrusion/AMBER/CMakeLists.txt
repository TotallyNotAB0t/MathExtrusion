# Parametre Repertoire

INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Debug)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Setting)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Struct)

#User
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/User)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/User/Input)

#Rendue
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Pool)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Window)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Vulkan)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Devices)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/SwapChain)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Graphics)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Shape)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Shader)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Light)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Buffer)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Descriptor)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Semaphore)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/ImGUI)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Camera)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Materials)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Rendering/Skybox)

#Miscellaneous
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Miscellaneous)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Interface)
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Physics)

#Struct
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/AMBER/Header/Struct)

#bullet
INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/ThirdParty/Bullet3/src)

# Fichier

FILE(GLOB_RECURSE ENGINE_SOURCES *.cpp *.c)
FILE(GLOB_RECURSE ENGINE_HEADERS *.hpp *.h *.inl)
#ADD_EXECUTABLE(AMBER ${ENGINE_SOURCES} ${ENGINE_HEADERS})
ADD_LIBRARY(AMBER STATIC ${ENGINE_SOURCES} ${ENGINE_HEADERS})

FIND_PACKAGE(Vulkan)

IF (VULKAN_FOUND)
	IF(WIN32)
		TARGET_INCLUDE_DIRECTORIES(AMBER PRIVATE "${Vulkan_INCLUDE_DIRS}")
	ELSEIF(UNIX)
		TARGET_INCLUDE_DIRECTORIES(AMBER PRIVATE $ENV{Vulkan_INCLUDE_DIRS})
	ENDIF()
    TARGET_LINK_LIBRARIES(AMBER PRIVATE glfw glfw3 termcolor tinyobjloader stb glm ImGUI LinearMath Bullet3Common BulletInverseDynamics BulletCollision BulletDynamics BulletSoftBody ${hv_LIB} ${Vulkan_LIBRARIES})	
ELSE ()
    MESSAGE(FATAL_ERROR "Impossible de trouver Vulkan")
ENDIF ()